<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:flyleafLib="clr-namespace:FlyleafLib;assembly=FlyleafLib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:wpf="clr-namespace:FlyleafLib.Controls.WPF;assembly=FlyleafLib.Controls.WPF"
                    xmlns:loc="clr-namespace:Localization.Windows;assembly=Mafe.Localization.Windows"
                    mc:Ignorable="d">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/MaterialDesign.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/Converters.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/FlyleafLib.Controls.WPF;component/Resources/PopUpMenu.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style
        TargetType="{x:Type MenuItem}"
        x:Key="MaterialDesignMenuItem"
        BasedOn="{x:Null}">
        <Setter
            Property="Padding"
            Value="10 0 10 0"></Setter>
        <Setter
            Property="OverridesDefaultStyle"
            Value="True" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type MenuItem}">
                    <ControlTemplate.Resources>
                        <Style
                            TargetType="materialDesign:PackIcon">
                            <Setter
                                Property="FrameworkElement.Width"
                                Value="16" />
                            <Setter
                                Property="FrameworkElement.Height"
                                Value="16" />
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid
                        ClipToBounds="True">
                        <Border
                            x:Name="templateRoot"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True" />
                        <Border
                            x:Name="BackgroundRoot"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{DynamicResource PrimaryHueMidBrush}"
                            SnapsToDevicePixels="True"
                            Opacity="0" />
                        <materialDesign:Ripple
                            Background="Transparent"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Focusable="False"
                            Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}">
                            <Grid
                                Height="{TemplateBinding Height}"
                                Background="Transparent">
                                <Grid
                                    VerticalAlignment="Center"
                                    Background="Transparent"
                                    Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
                                            Width="Auto"
                                            SharedSizeGroup="IconGroup" />
                                        <ColumnDefinition
                                            Width="*"
                                            SharedSizeGroup="HeaderGroup" />
                                        <ColumnDefinition
                                            Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid
                                        x:Name="IconWrapper"
                                        Visibility="Visible"
                                        Width="40"
                                        Margin="0 0 -10 0"
                                        >
                                        <ContentPresenter
                                            x:Name="Icon"
                                            Content="{TemplateBinding Icon}"
                                            ContentSource="Icon"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Height="16"
                                            Width="16"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                    <Grid
                                        x:Name="GlyphWrapper"
                                        Visibility="Collapsed"
                                        Width="40"
                                        Margin="0 0 -10 0"
                                        >
                                        <Viewbox
                                            x:Name="GlyphPanel"
                                            Width="16"
                                            Height="16"
                                            HorizontalAlignment="Left"
                                            Margin="0"
                                            Visibility="Collapsed"
                                            VerticalAlignment="Center"
                                            FlowDirection="LeftToRight">
                                            <Canvas
                                                Width="24"
                                                Height="24">
                                                <Path
                                                    Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"
                                                    x:Name="Glyph"
                                                    Fill="{DynamicResource SecondaryHueMidBrush}"
                                                    FlowDirection="LeftToRight" />
                                            </Canvas>
                                        </Viewbox>
                                    </Grid>
                                    <Grid
                                        Grid.Column="1">
                                        <ContentPresenter
                                            x:Name="BoldHeaderPresenter"
                                            Visibility="Hidden"
                                            TextBlock.FontWeight="Bold"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            Content="{TemplateBinding Header}"
                                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                            ContentSource="Header"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="Center" />
                                        <ContentPresenter
                                            x:Name="HeaderPresenter"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            Content="{TemplateBinding Header}"
                                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                            ContentSource="Header"
                                            RecognizesAccessKey="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="Center" />
                                    </Grid>
                                    <Grid
                                        x:Name="InputGestureTextWrapper"
                                        Grid.Column="2"
                                        Visibility="Collapsed">
                                        <TextBlock
                                            Visibility="{TemplateBinding InputGestureText, Converter={StaticResource StringIsEmptyVisibilityConverter}}"
                                            Margin="16 0 0 0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Right"
                                            Text="{TemplateBinding InputGestureText}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Foreground="{TemplateBinding Foreground}" />
                                    </Grid>
                                    <Grid
                                        x:Name="SubBlock"
                                        Grid.Column="2"
                                        Visibility="Collapsed"
                                        Margin="16 0 0 0">
                                        <Path
                                            Width="5"
                                            Height="10"
                                            Stretch="Uniform"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Data="M0,16 L8,8 L0,0 Z"
                                            Fill="{DynamicResource SecondaryHueMidBrush}"
                                            SnapsToDevicePixels="False" />
                                    </Grid>
                                </Grid>
                            </Grid>
                        </materialDesign:Ripple>
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            PopupAnimation="Slide"
                            Placement="Bottom"
                            >
                            <Border
                                x:Name="SubMenuBorder"
                                Background="{DynamicResource MaterialDesignPaper}"
                                Effect="{DynamicResource MaterialDesignShadowDepth1}"
                                CornerRadius="6">

                                <Border
                                    Background="Transparent">
                                    <ScrollViewer
                                        x:Name="SubMenuScrollViewer"
                                        Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid
                                            RenderOptions.ClearTypeHint="Enabled"
                                            Margin="0 0 0 0">
                                            <Canvas
                                                HorizontalAlignment="Left"
                                                Height="0"
                                                VerticalAlignment="Top"
                                                Width="0">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Fill="{Binding Background, ElementName=SubMenuBorder}"
                                                    Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                    Width="{Binding ActualWidth, ElementName=SubMenuBorder}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--#region Roles Triggers -->
                        <Trigger
                            Property="Role"
                            Value="SubmenuHeader">
                            <Setter
                                TargetName="SubBlock"
                                Property="Visibility"
                                Value="Visible" />
                            <Setter
                                TargetName="PART_Popup"
                                Property="Placement"
                                Value="Right" />
                            <Setter
                                TargetName="PART_Popup"
                                Property="VerticalOffset"
                                Value="-16" />
                            <Setter
                                Property="Height"
                                Value="32" />
                            <Setter
                                TargetName="BoldHeaderPresenter"
                                Property="Visibility"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger
                            Property="Role"
                            Value="SubmenuItem">
                            <Setter
                                Property="Height"
                                Value="32" />
                            <Setter
                                TargetName="InputGestureTextWrapper"
                                Property="Visibility"
                                Value="Visible" />
                            <Setter
                                TargetName="BoldHeaderPresenter"
                                Property="Visibility"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger
                            Property="Role"
                            Value="TopLevelHeader">
                            <Setter
                                Property="Grid.IsSharedSizeScope"
                                Value="True" />
                            <Setter
                                Property="Padding"
                                Value="16 0" />
                            <Setter
                                Property="Height"
                                Value="48" />
                            <Setter
                                TargetName="templateRoot"
                                Property="CornerRadius"
                                Value="6" />
                            <Setter
                                TargetName="BackgroundRoot"
                                Property="CornerRadius"
                                Value="6" />
                        </Trigger>
                        <Trigger
                            Property="Role"
                            Value="TopLevelItem">
                            <Setter
                                Property="Padding"
                                Value="16 0" />
                            <Setter
                                Property="Height"
                                Value="48" />
                            <Setter
                                TargetName="templateRoot"
                                Property="CornerRadius"
                                Value="6" />
                            <Setter
                                TargetName="BackgroundRoot"
                                Property="CornerRadius"
                                Value="6" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition
                                    Property="Role"
                                    Value="TopLevelHeader" />
                                <Condition
                                    Property="IsSubmenuOpen"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter
                                    TargetName="HeaderPresenter"
                                    Property="TextBlock.FontWeight"
                                    Value="Bold" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <!--#endregion-->

                        <Trigger
                            Property="HasDropShadow"
                            SourceName="PART_Popup"
                            Value="True">
                            <Setter
                                TargetName="SubMenuBorder"
                                Property="Margin"
                                Value="5" />
                        </Trigger>

                        <Trigger
                            Property="IsSuspendingPopupAnimation"
                            Value="True">
                            <Setter
                                Property="PopupAnimation"
                                TargetName="PART_Popup"
                                Value="None" />
                        </Trigger>
                        <Trigger
                            Property="Icon"
                            Value="{x:Null}">
                            <Setter
                                Property="Visibility"
                                TargetName="IconWrapper"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger
                            Property="IsChecked"
                            Value="True">
                            <Setter
                                Property="Visibility"
                                TargetName="GlyphPanel"
                                Value="Visible" />
                        </Trigger>
                        <Trigger
                            Property="IsCheckable"
                            Value="True">
                            <Setter
                                Property="Visibility"
                                TargetName="GlyphWrapper"
                                Value="Visible" />
                            <Setter
                                Property="Visibility"
                                TargetName="IconWrapper"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger
                            Property="IsHighlighted"
                            Value="True">
                            <Setter
                                TargetName="BackgroundRoot"
                                Property="Opacity"
                                Value="0.13" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="Opacity"
                                Value=".56" />
                        </Trigger>
                        <Trigger
                            Property="CanContentScroll"
                            SourceName="SubMenuScrollViewer"
                            Value="False">
                            <Setter
                                Property="Canvas.Top"
                                TargetName="OpaqueRect"
                                Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                            <Setter
                                Property="Canvas.Left"
                                TargetName="OpaqueRect"
                                Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MaterialDesignMenu"
        TargetType="{x:Type MenuBase}">
        <Style.Resources>
            <Style
                TargetType="MenuItem"
                BasedOn="{StaticResource MaterialDesignMenuItem}" />
        </Style.Resources>

        <Setter
            Property="Background"
            Value="{DynamicResource MaterialDesignPaper}" />
        <Setter
            Property="FontFamily"
            Value="{StaticResource MaterialDesignFont}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter
            Property="TextBlock.FontSize"
            Value="15" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="UseLayoutRounding"
            Value="True" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type MenuBase}">
                    <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <ItemsPresenter
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="FlyleafContextMenu"
        TargetType="{x:Type ContextMenu}"
        BasedOn="{StaticResource MaterialDesignMenu}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type MenuBase}">
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{loc:Translate CultureName}" Value="فارسی">
                            <Setter Property="FontFamily" Value="{StaticResource PelakFont}"></Setter>
                            <Setter Property="FlowDirection" Value="{loc:Translate Direction}"></Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                    <AdornerDecorator>
                        <Grid>
                            <Border
                                Background="{TemplateBinding Background}"
                                Margin="0"
                                CornerRadius="6"
                                Effect="{DynamicResource MaterialDesignShadowDepth1}"></Border>

                            <Border
                                Margin="0"
                                Background="Transparent">
                                <ScrollViewer
                                    x:Name="SubMenuScrollViewer"
                                    Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <Grid
                                        RenderOptions.ClearTypeHint="Enabled"
                                        Margin="0 0">
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            Grid.IsSharedSizeScope="True"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            KeyboardNavigation.TabNavigation="Cycle" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Popup Menu-->
    <collections:ArrayList x:Key="MenuAudioStreams">
        <MenuItem Header="Embedded" ItemsSource="{Binding Player.Audio.Streams}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Command" Value="{Binding DataContext.Player.Commands.Open, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                    <Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="{Binding Enabled, Mode=OneWay}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat=" #{0} ({1}) {2} @{3}Hz [CH: {4}] [Bits: {5}]">
                                <Binding Path="StreamIndex"/>
                                <Binding Path="Language"/>
                                <Binding Path="SampleFormatStr"/>
                                <Binding Path="SampleRate"/>
                                <Binding Path="Channels"/>
                                <Binding Path="Bits"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </DataTemplate>
            </MenuItem.ItemTemplate>
        </MenuItem>
        <MenuItem Header="External" ItemsSource="{Binding Player.Playlist.Selected.ExternalAudioStreams}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Command" Value="{Binding DataContext.Player.Commands.Open, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                    <Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="{Binding Enabled, Mode=OneWay}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat=" ({0}) {1} [BitRate: {2}] [{3}]">
                                <Binding Path="Language"/>
                                <Binding Path="Codec"/>
                                <Binding Path="BitRate"/>
                                <Binding Path="Protocol"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </DataTemplate>
            </MenuItem.ItemTemplate>
        </MenuItem>
    </collections:ArrayList>
    <collections:ArrayList x:Key="MenuVideoStreams" x:Shared="False">
        <MenuItem Header="Embedded" ItemsSource="{Binding Player.Video.Streams}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Command" Value="{Binding DataContext.Player.Commands.Open, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                    <Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="{Binding Enabled, Mode=OneWay}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat=" {0}x{1} @{2:#,#.00} ({3}/{4})">
                                <Binding Path="Width"/>
                                <Binding Path="Height"/>
                                <Binding Path="FPS"/>
                                <Binding Path="Codec"/>
                                <Binding Path="PixelFormatStr"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </DataTemplate>
            </MenuItem.ItemTemplate>
        </MenuItem>
        <MenuItem Header="External" ItemsSource="{Binding Player.Playlist.Selected.ExternalVideoStreams}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Command" Value="{Binding DataContext.Player.Commands.Open, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                    <Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="{Binding Enabled, Mode=OneWay}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat=" {0}x{1} @{2} ({3}) [{4}]">
                                <Binding Path="Width"/>
                                <Binding Path="Height"/>
                                <Binding Path="FPS"/>
                                <Binding Path="Codec"/>
                                <Binding Path="Protocol"/>
                                <!--<Binding Path="HasAudio"/>-->
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </DataTemplate>
            </MenuItem.ItemTemplate>
        </MenuItem>
    </collections:ArrayList>
    <collections:ArrayList x:Key="MenuSubtitlesStreams" x:Shared="False">
        <MenuItem Header="Embedded" ItemsSource="{Binding Player.Subtitles.Streams}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Command" Value="{Binding DataContext.Player.Commands.Open, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                    <Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="{Binding Enabled, Mode=OneWay}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat=" [#{0}] {1}">
                                <Binding Path="StreamIndex"/>
                                <Binding Path="Language"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </DataTemplate>
            </MenuItem.ItemTemplate>
        </MenuItem>
        <MenuItem Header="External" ItemsSource="{Binding Player.Playlist.Selected.ExternalSubtitlesStreams}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Command" Value="{Binding DataContext.Player.Commands.Open, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                    <Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="{Binding Enabled, Mode=OneWay}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
            <MenuItem.ItemTemplate>
                <DataTemplate>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat=" ({0}) {1} {2}">
                                <Binding Path="Language"/>
                                <Binding Path="Rating"/>
                                <Binding Path="Title"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </DataTemplate>
            </MenuItem.ItemTemplate>
        </MenuItem>
    </collections:ArrayList>

    <ContextMenu x:Key="PopUpMenu" Style="{StaticResource FlyleafContextMenu}" d:DataContext="{d:DesignInstance wpf:FlyleafME}">
        <MenuItem Header="{loc:Translate ResourceKey=ContextMenu.OpenFile}" Command="{Binding OpenFileDialog}" Icon="{materialDesign:PackIcon FolderOutline}"/>
        <MenuItem Header="{loc:Translate ResourceKey=ContextMenu.PasteUrl}" Command="{Binding Player.Commands.OpenFromClipboard}" IsEnabled="{Binding CanPaste}" Icon="{materialDesign:PackIcon ContentPaste}"/>
        <Separator />

        <MenuItem ItemsSource="{Binding Player.Playlist.Items}" Icon="{materialDesign:PackIcon ViewList}">
            <MenuItem.Header>
                <MultiBinding Converter="{StaticResource PlaylistItems}">
                    <Binding Path="Player.Playlist.Items.Count" />
                    <Binding Path="Player.Playlist.ExpectingItems"/>
                </MultiBinding>
            </MenuItem.Header>

            <MenuItem.ItemContainerStyle>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="Command" Value="{Binding DataContext.Player.Commands.Reopen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                    <Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="{Binding Enabled, Mode=OneWay}"/>
                    <Setter Property="Header" Value="{Binding Title}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>

        <Separator />

        <MenuItem Header="Audio" Icon="{materialDesign:PackIcon Kind=VolumeLow}">
            <MenuItem Header="Enabled" IsCheckable="True" IsChecked="{Binding Config.Audio.Enabled}"/>
            <MenuItem Header="{Binding Config.Audio.Delay, Converter={StaticResource TicksToMilliSeconds}}" HeaderStringFormat="Delay ({0})">
                <MenuItem Header="Reset..." CommandParameter="0" Command="{Binding Player.Commands.AudioDelaySet}"/>
                <Separator />
                <MenuItem Header="-   10"   CommandParameter="-10"      Command="{Binding Player.Commands.AudioDelaySet2}"/>
                <MenuItem Header="-  100"   CommandParameter="-100"     Command="{Binding Player.Commands.AudioDelaySet2}"/>
                <MenuItem Header="- 1000"   CommandParameter="-1000"    Command="{Binding Player.Commands.AudioDelaySet2}"/>
                <MenuItem Header="-10000"   CommandParameter="-10000"   Command="{Binding Player.Commands.AudioDelaySet2}"/>
                <Separator />
                <MenuItem Header="+10000"   CommandParameter="10000"    Command="{Binding Player.Commands.AudioDelaySet2}"/>
                <MenuItem Header="+ 1000"   CommandParameter="1000"     Command="{Binding Player.Commands.AudioDelaySet2}"/>
                <MenuItem Header="+  100"   CommandParameter="100"      Command="{Binding Player.Commands.AudioDelaySet2}"/>
                <MenuItem Header="+   10"   CommandParameter="10"       Command="{Binding Player.Commands.AudioDelaySet2}"/>
            </MenuItem>
            <MenuItem Header="Streams" ItemsSource="{StaticResource MenuAudioStreams}"/>
        </MenuItem>

        <MenuItem Header="Subtitles" Icon="{materialDesign:PackIcon Kind=CcOutline}">
            <MenuItem Header="Enabled" IsCheckable="True" IsChecked="{Binding Config.Subtitles.Enabled}"/>
            <MenuItem Header="Fonts..." Command="{Binding SetSubtitlesFont}"/>
            <MenuItem Header="{Binding Config.Subtitles.Delay, Converter={StaticResource TicksToMilliSeconds}}" HeaderStringFormat="Delay ({0})">
                <MenuItem Header="Reset..." CommandParameter="0" Command="{Binding Player.Commands.SubtitlesDelaySet}"/>
                <Separator />
                <MenuItem Header="-   10"   CommandParameter="-10"      Command="{Binding Player.Commands.SubtitlesDelaySet2}"/>
                <MenuItem Header="-  100"   CommandParameter="-100"     Command="{Binding Player.Commands.SubtitlesDelaySet2}"/>
                <MenuItem Header="- 1000"   CommandParameter="-1000"    Command="{Binding Player.Commands.SubtitlesDelaySet2}"/>
                <MenuItem Header="-10000"   CommandParameter="-10000"   Command="{Binding Player.Commands.SubtitlesDelaySet2}"/>
                <Separator />
                <MenuItem Header="+10000"   CommandParameter="10000"    Command="{Binding Player.Commands.SubtitlesDelaySet2}"/>
                <MenuItem Header="+ 1000"   CommandParameter="1000"     Command="{Binding Player.Commands.SubtitlesDelaySet2}"/>
                <MenuItem Header="+  100"   CommandParameter="100"      Command="{Binding Player.Commands.SubtitlesDelaySet2}"/>
                <MenuItem Header="+   10"   CommandParameter="10"       Command="{Binding Player.Commands.SubtitlesDelaySet2}"/>
            </MenuItem>
            <MenuItem Header="{Binding UIConfig.SubsMargin.Bottom}" HeaderStringFormat="Position Y ({0})">
                <MenuItem Header="Reset..." Command="{Binding ResetSubsPositionY}"/>
                <Separator />
                <MenuItem Header="Up"        CommandParameter="  2"     Command="{Binding SetSubsPositionY}"/>
                <MenuItem Header="Up x 10"   CommandParameter=" 20"     Command="{Binding SetSubsPositionY}"/>
                <MenuItem Header="Down x 10" CommandParameter="-20"     Command="{Binding SetSubsPositionY}"/>
                <MenuItem Header="Down"      CommandParameter=" -2"     Command="{Binding SetSubsPositionY}"/>
            </MenuItem>
            <MenuItem Header="Streams" ItemsSource="{StaticResource MenuSubtitlesStreams}"/>
            <MenuItem Header="Search Local" IsCheckable="True" IsChecked="{Binding Config.Subtitles.SearchLocal}"/>
            <MenuItem Header="Search Online" IsCheckable="True" IsChecked="{Binding Config.Subtitles.SearchOnline}"/>
        </MenuItem>

        <MenuItem Header="Video" Icon="{materialDesign:PackIcon VideoOutline}">
            <MenuItem Header="Enabled" IsCheckable="True" IsChecked="{Binding Config.Video.Enabled}"/>
            <MenuItem Header="Aspect Ratio">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="Command" Value="{Binding DataContext.ChangeAspectRatio, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <MenuItem Header="Chapters" ItemsSource="{Binding Player.Chapters}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="Command" Value="{Binding DataContext.Player.Commands.SeekToChapter, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                        <Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource Self}}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat=" [{0}] {1}">
                                    <Binding Path="StartTime" Converter="{StaticResource TicksToTime}"/>
                                    <Binding Path="Title"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
            </MenuItem>
            <MenuItem Header="HW Acceleration" IsCheckable="True" IsChecked="{Binding Config.Video.VideoAcceleration}"/>
            <MenuItem Header="Record" IsCheckable="True" IsChecked="{Binding Player.IsRecording, Mode=OneWay}" Command="{Binding Player.Commands.ToggleRecording}"/>
            <MenuItem Header="{Binding Player.Rotation}" HeaderStringFormat="Rotation ({0}°)">
                <MenuItem Header="0°"       CommandParameter="0"    Command="{Binding Player.Commands.RotationSet}"/>
                <MenuItem Header="90°"      CommandParameter="90"   Command="{Binding Player.Commands.RotationSet}"/>
                <MenuItem Header="180°"     CommandParameter="180"  Command="{Binding Player.Commands.RotationSet}"/>
                <MenuItem Header="270°"     CommandParameter="270"  Command="{Binding Player.Commands.RotationSet}"/>
            </MenuItem>
            <MenuItem Header="Reverse Playback" IsCheckable="True" IsChecked="{Binding Player.ReversePlayback}"/>
            <MenuItem Header="{Binding Player.Speed}" HeaderStringFormat="Speed (x{0})">
                <MenuItem Header=" x 8"     CommandParameter="8"    Command="{Binding Player.Commands.SpeedSet}"/>
                <MenuItem Header=" x 4"     CommandParameter="4"    Command="{Binding Player.Commands.SpeedSet}"/>
                <MenuItem Header=" x 2"     CommandParameter="2"    Command="{Binding Player.Commands.SpeedSet}"/>
                <MenuItem Header=" x 1.75"  CommandParameter="1.75" Command="{Binding Player.Commands.SpeedSet}"/>
                <MenuItem Header=" x 1.50"  CommandParameter="1.50" Command="{Binding Player.Commands.SpeedSet}"/>
                <MenuItem Header=" x 1.25"  CommandParameter="1.25" Command="{Binding Player.Commands.SpeedSet}"/>
                <MenuItem Header=" x 1"     CommandParameter="1"    Command="{Binding Player.Commands.SpeedSet}"/>
                <MenuItem Header=" x 0.75"  CommandParameter="0.75" Command="{Binding Player.Commands.SpeedSet}"/>
                <MenuItem Header=" x 0.50"  CommandParameter="0.50" Command="{Binding Player.Commands.SpeedSet}"/>
                <MenuItem Header=" x 0.25"  CommandParameter="0.25" Command="{Binding Player.Commands.SpeedSet}"/>
            </MenuItem>
            <MenuItem Header="Streams" ItemsSource="{StaticResource MenuVideoStreams}"/>

            <MenuItem Header="Take a Snapshot" Command="{Binding Player.Commands.TakeSnapshot}" Icon="{materialDesign:PackIcon Kind=PhotoCamera}"/>
            <MenuItem Header="V.Sync" IsCheckable="True" IsChecked="{Binding Config.Video.VSync}"/>
            <MenuItem Header="Zoom">
                <MenuItem Header="Reset ..." Command="{Binding Player.Commands.ResetAll}"/>
                <MenuItem Header="Zoom In"   Command="{Binding Player.Commands.ZoomIn}" Icon="{materialDesign:PackIcon Kind=ZoomIn}"/>
                <MenuItem Header="Zoom out"  Command="{Binding Player.Commands.ZoomOut}" Icon="{materialDesign:PackIcon Kind=ZoomOut}"/>
            </MenuItem>
        </MenuItem>

        <Separator />
        <MenuItem Header="{loc:Translate ResourceKey=ContextMenu.ShowDebug}" IsCheckable="True" IsChecked="{Binding ShowDebug}"/>

        <Separator />
        <MenuItem Header="{loc:Translate ResourceKey=ContextMenu.Reconfigure}" Icon="{materialDesign:PackIcon CogRefresh}" Command="{Binding Source={StaticResource MainWindowViewModel}, Path=InvokeReconfigureCommand}"></MenuItem>
        <MenuItem Header="{loc:Translate ResourceKey=ContextMenu.ChangeLanguage}" Icon="{materialDesign:PackIcon Language}" Command="{Binding Source={StaticResource MainWindowViewModel}, Path=InvokeChangeLanguageCommand}"></MenuItem>
        <MenuItem Header="{loc:Translate ResourceKey=ContextMenu.Exit}" Icon="{materialDesign:PackIcon ExitToApp}" Command="{Binding ExitApplication}"/>
    </ContextMenu>


</ResourceDictionary>